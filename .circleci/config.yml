# For a detailed guide to building and testing on iOS, read the docs:
# https://circleci.com/docs/2.0/testing-ios/

version: 2.1
orbs:
  macos: circleci/macos@2.0.0
commands:
  prep_all:
    description: "Prep the build environment, bundler, and carthage"
    steps:
      - prep_simulator
      - prep_environment
      - prep_clone
      - prep_bundler_carthage
  prep_installtests_132:
    description: "Preps the build environment for Xcode 13.2"
    steps:
      - run: "brew upgrade carthage"
      - run: git clone --depth 1 "$CIRCLE_REPOSITORY_URL" --branch "$CIRCLE_BRANCH" .
      - run: "bundle config set path 'vendor/bundle'"
      - restore_cache:
          key: v13-stp-bundle-xcode-132-cache # Update this if bundle dependencies or Xcode version change
      - run: "bundle install"
      - save_cache:
          key: v13-stp-bundle-xcode-132-cache
          paths:
            - vendor
  prep_clone:
    description: "Shallow clones the repo"
    steps:
      - run: git clone --depth 1 "$CIRCLE_REPOSITORY_URL" --branch "$CIRCLE_BRANCH" .
  prep_bundler_carthage:
    description: "Prep the build environment, bundler, and carthage"
    steps:
      - run: "bundle config set path 'vendor/bundle'"
      - restore_cache:
          key: v13-stp-carthage-xcode-133-cache # Update this if Carthage dependencies or Xcode version change
      - restore_cache:
          key: v13-stp-bundle-xcode-133-cache # Update this if bundle dependencies or Xcode version change
      - run: "bundle install"
      - run: "carthage bootstrap --platform iOS --configuration Release --no-use-binaries --cache-builds --use-xcframeworks"
      - save_cache:
          key: v13-stp-carthage-xcode-133-cache
          paths:
            - Carthage
      - save_cache:
          key: v13-stp-bundle-xcode-133-cache
          paths:
            - vendor
  prep_environment:
    description: "Prep environment variables to build to local folder"
    steps:
      - run: "bundle config set path 'vendor/bundle'"
      - run: echo "export CONFIGURATION_BUILD_DIR=$CIRCLE_WORKING_DIRECTORY/stpbuild/products" >> $BASH_ENV
      - run: echo "export CONFIGURATION_TEMP_DIR=$CIRCLE_WORKING_DIRECTORY/stpbuild/intermediates" >> $BASH_ENV
  prep_simulator:
    description: "Prep simulators"
    steps:
      - macos/preboot-simulator:
          version: "15.4"
          platform: "iOS"
          device: "iPhone 8"
  archive_logs:
    description: Archive logs
    steps:
      - run:
          name: Archive test results
          command: "mkdir -p circle-results && tar -acf circle-results/$CIRCLE_JOB-node-$CIRCLE_NODE_INDEX-logs.tar.bz2 build-ci-tests/Logs/Test || true"
          when: always # on failure or success
      - store_artifacts:
          path: circle-results
          destination: logs
  upload_code_cov:
    description: "Upload code coverage"
    steps:
      - run:
          name: Download Codecov Uploader 
          command: |
            curl -s https://codecov.io/bash > codecov;
            VERSION=$(grep 'VERSION=\"[0-9\.]*\"' codecov | cut -d'"' -f2);
            for i in 1 256 512
            do
              shasum -a $i -c --ignore-missing <(curl -s "https://raw.githubusercontent.com/codecov/codecov-bash/${VERSION}/SHA${i}SUM") ||
              shasum -a $i -c <(curl -s "https://raw.githubusercontent.com/codecov/codecov-bash/${VERSION}/SHA${i}SUM" | grep -w "codecov")
            done
      
      - run:
          name: Upload Code Coverage Reports for Stripe iOS
          command: bash ./codecov -v -X s3 -c -D "build-ci-tests/Logs/Test" -J "StripeiOS" 


executors:
  mac-executor:
    macos:
      xcode: 13.3.0
    resource_class: macos.x86.medium.gen2
  xcode-132-mac-executor:
    macos:
      xcode: 13.2.1
    resource_class: macos.x86.medium.gen2

jobs:
  size-report:
    executor: mac-executor

    steps:
      - macos/switch-ruby:
          version: "system" # Xcode's ipatool depends on a specific version of ruby, without this App Store archiving will fail
      - run: git clone "$CIRCLE_REPOSITORY_URL" --branch "$CIRCLE_BRANCH" .
      - run: "sudo gem install bundler"
      - run: "bundle install"
      - run:
          name: "Run size report"
          command: bundle exec ruby Tests/installation_tests/size_test/size_report.rb private $CIRCLE_BRANCH

  main-tests:
    executor: mac-executor
    parallelism: 6

    steps:
      - prep_all
      - run: |
          bundle exec ./ci_scripts/circle_parallelize.rb \
          stripeios_tests \
          stripecameracore_tests \
          stripecore_tests \
          stripeidentity_tests \
          stripefinancialconnections_tests \
          stripecardscan_tests \
          stripeapplepay_tests \
          stripeuicore_tests \
          ui_tests \
          installation_cocoapods_without_frameworks_objc \
          installation_cocoapods_frameworks_objc \
          installation_cocoapods_frameworks_swift \
          installation_spm_objc \
          installation_spm_swift \
          installation_carthage \
          paymentsheet_tests \
          legacy_tests_14 \
          preflight \
          ci_builds \
          export_builds \
          analyze \
          threeds2_tests \
          check_docs \
          objc_symbol_check
      - archive_logs
      - upload_code_cov

  stripefinancialconnections-tests:
    executor: mac-executor

    steps:
      - prep_all
      - run: "bundle exec fastlane stripefinancialconnections_tests"
      - archive_logs

  e2e-only:
    executor: mac-executor

    steps:
      - prep_all
      - run: "bundle exec fastlane e2e_only"
      - archive_logs
      - run:
          name: Notify on success
          command: "./ci_scripts/notify.rb pass"
          when: on_success
      - run:
          name: Notify on failure
          command: "./ci_scripts/notify.rb fail"
          when: on_fail

  xcode-132-install-tests:
    executor: xcode-132-mac-executor
    parallelism: 3

    steps:
      - prep_installtests_132
      - run: |
          bundle exec ./ci_scripts/circle_parallelize.rb \
          export_builds \
          installation_cocoapods_without_frameworks_objc \
          installation_cocoapods_frameworks_objc \
          installation_cocoapods_frameworks_swift \
          installation_spm_objc \
          installation_spm_swift \
          installation_carthage
      - archive_logs

  deploy-dry-run:
    executor: xcode-132-mac-executor

    steps:
      - run: git clone "$CIRCLE_REPOSITORY_URL" --branch "$CIRCLE_BRANCH" .
      - run: "sudo gem install bundler"
      - run: "bundle install"
      - run: "brew install sourcekitten"
      - run: "bundle exec ./ci_scripts/create_release.rb --version 99.99.99 --dry-run"
      - run: "bundle exec ./ci_scripts/deploy_release.rb --dry-run"
      - archive_logs
      - run:
          name: Notify on failure
          command: "./ci_scripts/notify_ci.rb"
          when: on_fail

  basic-integration-tests:
    executor: mac-executor

    steps:
      - prep_all
      - run: "bundle exec fastlane basic_integration_tests"
      - archive_logs
      - run:
          name: Notify on failure
          command: "./ci_scripts/notify_ci.rb"
          when: on_fail

  paymentsheet-tests:
    executor: mac-executor

    steps:
      - prep_all
      - run: "bundle exec fastlane paymentsheet_tests"
      - archive_logs

  integration-all:
    executor: mac-executor

    steps:
      - prep_all
      - run: "bundle exec fastlane integration_all"
      - archive_logs
      - run:
          name: Notify on failure
          command: "./ci_scripts/notify_ci.rb"
          when: on_fail

  linting-tests:
    executor: mac-executor

    steps:
      - prep_environment
      - prep_clone
      - prep_bundler_carthage
      - run: "bundle exec fastlane linting_tests"
      - archive_logs

  check-docs:
    executor: mac-executor

    steps:
      - prep_environment
      - prep_clone
      - prep_bundler_carthage
      - run: "bundle exec fastlane check_docs"

  legacy-tests-12:
    executor: mac-executor

    steps:
      - prep_environment
      - prep_clone
      - prep_bundler_carthage
      - run:
          name: "Install old simulator"
          no_output_timeout: 20m
          command: sudo bundle exec xcversion simulators --install="iOS 12.4" --no-progress || true
      - run: "bundle exec fastlane legacy_tests_12"
      - archive_logs

  legacy-tests-13:
    executor: mac-executor

    steps:
      - prep_environment
      - prep_clone
      - prep_bundler_carthage
      - run:
          name: "Install old simulator"
          no_output_timeout: 20m
          command: sudo bundle exec xcversion simulators --install="iOS 13.7" --no-progress || true
      - run: "bundle exec fastlane legacy_tests_13"
      - archive_logs

workflows:
  version: 2.1
  build-and-test:
    jobs:
      - size-report
      - main-tests
      - legacy-tests-12
      - legacy-tests-13
      - xcode-132-install-tests
  e2e-only:
    triggers:
      - schedule:
          cron: "56 8 * * *" # at 8:56 every day
          filters:
            branches:
              only:
                - private
    jobs:
      - e2e-only:
          context:
            - E2EEndpoint
  integration-all:
    triggers:
      - schedule:
          cron: "51 10 * * *" # at 10:51 every day
          filters:
            branches:
              only:
                - private
    jobs:
      - integration-all:
          context:
            - E2EEndpoint
      - basic-integration-tests:
          context:
            - E2EEndpoint
      - deploy-dry-run:
          context:
            - E2EEndpoint
